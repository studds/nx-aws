{
    "version": 2,
    "outputCapture": "direct-nodejs",
    "title": "Schema for deploying static sites to AWS s3",
    "description": "AWS S3 deploy options",
    "type": "object",
    "properties": {
        "buildOutputPath": {
            "type": "string",
            "description": "Explicit path to the built output that will be uploaded to S3 - defaults to outputPath from the build target on the current project"
        },
        "buildTarget": {
            "type": "string",
            "description": "Target to retrieve outputPath from - by default, will use the build target on the current project"
        },
        "resources": {
            "description": "Which files are uploaded, the cache-control header to use, and whether they should be invalidated in the CloudFront distribution - uses sensisble defaults",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "include": {
                        "description": "List of file names or patterns, passed to s3 sync command",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cacheControl": {
                        "description": "Cache control header, passed to s3 sync command",
                        "type": "string"
                    },
                    "invalidate": {
                        "description": "Whether to invalidate these files in the CloudFront distribution, after upload",
                        "type": "boolean"
                    }
                }
            }
        },
        "destPrefix": {
            "type": "string",
            "description": "The key prefix used to upload the files to s3. Note that the distribution must be configured with a matching `OriginPath`"
        },
        "stackSuffix": {
            "type": "string"
        },
        "bucket": {
            "description": "An object with `targetName` (referring to a sam:deploy project) and `outputName` (referring to a CloudFormation stack output with the distribution id)",
            "type": "object",
            "properties": {
                "targetName": {
                    "type": "string"
                },
                "outputName": {
                    "type": "string"
                }
            },
            "required": ["targetName", "outputName"]
        },
        "distribution": {
            "description": "An object with `targetName` (referring to a sam:deploy project) and `outputName` (referring to a CloudFormation stack output with the distribution id)",
            "type": "object",
            "properties": {
                "targetName": {
                    "type": "string"
                },
                "outputName": {
                    "type": "string"
                }
            },
            "required": ["targetName", "outputName"]
        },
        "config": {
            "type": "object",
            "properties": {
                "configFileName": {
                    "type": "string"
                },
                "importStackOutputs": {
                    "description": "Map of values to import from stacks defined by other projects. Values are in the format {project-name}:{target-name}.{output-name}. Note this is not on the basis of exported values.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "targetName": {
                                "type": "string"
                            },
                            "outputName": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "required": ["configFileName", "importStackOutputs"]
        },
        "configValues": {
            "description": "Map of config values - separate from config to allow easy overrides",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        }
    },
    "additionalProperties": false,
    "required": ["bucket"]
}
